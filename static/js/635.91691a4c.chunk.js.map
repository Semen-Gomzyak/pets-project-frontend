{"version":3,"file":"static/js/635.91691a4c.chunk.js","mappings":"0SAkDA,EA1CoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IAEnBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAExBC,EAAsB,WAC1B,MAAkB,KAAdF,GAIGH,EAAKM,QAAO,SAAAC,GAAG,OACpBA,EAAIC,KAAKC,cAAcC,SAASP,EAAU,GAE9C,EAEMQ,EAAaN,IAAwBA,IAAwBL,EAGnE,OACE,eAAIY,UAAU,cAAa,SACxBD,EAAWE,KAAI,gBAAGC,EAAE,EAAFA,GAAIN,EAAI,EAAJA,KAAMO,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAiBC,GAAF,EAARC,SAAmB,EAATD,WAAS,OAC3D,gBAAaL,UAAU,oBAAmB,WACxC,gBAAMO,IAAKF,GAzBL,sCAyBsCG,IAAKH,EAAWI,MAAM,SAClE,eAAGT,UAAU,iBAAgB,UAAC,SACrBJ,EAAK,oBACIO,EAAK,YACbC,EAAM,QAEhB,mBACEM,KAAK,SACLV,UAAU,mBACVW,QAAS,kBAAMzB,GAAS0B,EAAAA,EAAAA,IAAWV,GAAI,EAAC,SACzC,aAXMA,EAcJ,KAIb,ECtBA,EAnBe,WAEf,IAAMhB,GAAWC,EAAAA,EAAAA,MACX0B,GAAaxB,EAAAA,EAAAA,IAAYG,EAAAA,IAK/B,OACI,gBAAKQ,UAAU,YAAW,UAC1B,6BAAO,mBAEN,kBAAOA,UAAU,aAAaU,KAAK,OAAOI,MAAOD,EAAYE,SAPlE,SAAoBC,GAChB9B,GAASK,EAAAA,EAAAA,IAAWyB,EAAEC,cAAcH,MAAMI,QAC9C,QAUA,ECRe,SAASC,IACtB,IAAMjC,GAAWC,EAAAA,EAAAA,MAEXC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnB8B,GAAY/B,EAAAA,EAAAA,IAAYgC,EAAAA,IACxBC,GAAQjC,EAAAA,EAAAA,IAAYkC,EAAAA,KAG1BC,EAAAA,EAAAA,YAAU,WACRtC,GAASuC,EAAAA,EAAAA,MACX,GAAG,CAACvC,IAoBJ,OACE,iBAAKc,UAAU,YAAW,UACtBoB,IAAcE,IAAS,SAACI,EAAA,EAAM,KAChC,wBAAI,aACJ,SAAC,IAAO,CAACC,SAtBE,SAAC/B,EAAMgC,GACpB,IAAMC,EAAS,CACb3B,GAAI4B,IAAAA,WACJlC,KAAAA,EACAgC,OAAAA,GAGF,OAAIxC,EAAK2C,MAAK,SAAApC,GAAG,OAAIA,EAAIC,OAASiC,EAAOjC,IAAI,KAC3CoC,IAAAA,OAAAA,QAAwB,UAAD,OAAMH,EAAOjC,KAAI,2BAA2B,CACjEqC,QAAS,OAEJ,IAET/C,GAASgD,EAAAA,EAAAA,IAAQL,KACV,EACT,KAQI,eAAI7B,UAAU,gBAAe,SAAC,cAC9B,SAAC,EAAM,KACP,SAACmC,EAAO,MAGd,C","sources":["components/PetList/PetList.jsx","components/Filter/Filter.jsx","pages/PetsPage/PetsPage.jsx"],"sourcesContent":["import React from 'react';\n// import './ContactListStyles.scss';\nimport { deletePets } from '../../redux/pets/petsOperations';\nimport { getPets } from '../../redux/pets/petsReduser';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilterValue } from '../../redux/filterSlice';\nconst DEF_IMG = 'https://via.placeholder.com/200x150';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const pets = useSelector(getPets);\n\n  const filterPet = useSelector(getFilterValue);\n\n  const constgetVisiblePets = () => {\n    if (filterPet === '') {\n      return false;\n    }\n\n    return pets.filter(pet =>\n      pet.name.toLowerCase().includes(filterPet)\n    );\n  };\n\n  const finishPets = constgetVisiblePets() ? constgetVisiblePets() : pets;\n\n  \n  return (\n    <ul className=\"ContactList\">\n      {finishPets.map(({ id, name, date, breed, comments, avatarURL }) => (\n        <li key={id} className=\"ContactList__item\">\n          <img  src={avatarURL ? avatarURL : DEF_IMG} alt={avatarURL} width=\"233\" />\n          <p className=\"TodoList__text\">\n            Name: {name};\n            Date of birth: {date};\n            Breed: {breed};\n          </p>\n          <button\n            type=\"button\"\n            className=\"ContactList__btn\"\n            onClick={() => dispatch(deletePets(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from \"react\";\n// import \"./FilterStyles.scss\";\nimport { filterPet } from \"../../redux/filterSlice\";\nimport { getFilterValue } from '../../redux/filterSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nconst Filter = () => {\n\nconst dispatch = useDispatch();  \nconst filterCont = useSelector(getFilterValue); \n\nfunction filterName(e) {\n    dispatch(filterPet (e.currentTarget.value.trim()))\n} \nreturn (\n    <div className=\"filterBox\">\n    <label>\n     Filter by name:\n     <input className=\"fiterInput\" type=\"text\" value={filterCont} onChange={filterName}/>\n    </label>\n    </div>\n)\n\n}\n\nexport default Filter;","import { useEffect } from 'react';\nimport shortid from 'shortid';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchPets, addPets } from '../../redux/pets/petsOperations';\nimport { getPets, selectIsLoading, selectError } from '../../redux/pets/petsReduser';\nimport { Loader } from '../../components/Loader/Loader';\nimport PetForm from '../../components/PetForm';\nimport PetList from '../../components/PetList';\nimport Filter from '../../components/Filter';\n// import '../App.scss';\n\n\n\n\nexport default function PetsPage() {\n  const dispatch = useDispatch();\n\n  const pets = useSelector(getPets);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n\n  useEffect(() => {\n    dispatch(fetchPets());\n  }, [dispatch]);\n\n  const addPet = (name, number) => {\n    const newPet = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (pets.some(pet => pet.name === newPet.name)) {\n      Notiflix.Notify.warning(`‚ùå ${newPet.name} is already is contacts`, {\n        timeout: 3000,\n      });\n      return false;\n    }\n    dispatch(addPets(newPet));\n    return true;\n  };\n\n\n  return (\n    <div className=\"Phonebook\">\n       {isLoading && !error && <Loader />}\n      <h1>My pets</h1>\n      <PetForm onSubmit={addPet}/>\n      <h2 className=\"TitleContacts\">Contacts</h2>\n      <Filter />\n      <PetList/>\n    </div>\n  );\n}"],"names":["dispatch","useDispatch","pets","useSelector","getPets","filterPet","getFilterValue","constgetVisiblePets","filter","pet","name","toLowerCase","includes","finishPets","className","map","id","date","breed","avatarURL","comments","src","alt","width","type","onClick","deletePets","filterCont","value","onChange","e","currentTarget","trim","PetsPage","isLoading","selectIsLoading","error","selectError","useEffect","fetchPets","Loader","onSubmit","number","newPet","shortid","some","Notiflix","timeout","addPets","PetList"],"sourceRoot":""}